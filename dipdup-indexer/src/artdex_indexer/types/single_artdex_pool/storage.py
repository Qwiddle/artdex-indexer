# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any
from typing import Dict
from typing import Optional
from typing import Union

from pydantic import BaseModel
from pydantic import Extra


class PaymentToken(BaseModel):
    class Config:
        extra = Extra.forbid

    fa2_address: str
    token_id: Optional[str]


class PoolTypeItem(BaseModel):
    class Config:
        extra = Extra.forbid

    any2Any: Dict[str, Any]


class PoolTypeItem1(BaseModel):
    class Config:
        extra = Extra.forbid

    nFT2Token: Dict[str, Any]


class PoolTypeItem2(BaseModel):
    class Config:
        extra = Extra.forbid

    token2NFT: Dict[str, Any]


class SingleArtdexPoolStorage(BaseModel):
    class Config:
        extra = Extra.forbid

    asset_receiver: Optional[str]
    bonding_curve: str
    delta: str
    escaped: bool
    fee: str
    id_list: Dict[str, str]
    initialized: bool
    max_fee: str
    nft_collection_address: str
    owner: str
    payment_token: PaymentToken
    pool_type: Union[PoolTypeItem, PoolTypeItem1, PoolTypeItem2]
    protocol: str
    protocol_fee: str
    reserve: str
    spot_price: str
    token_id: Optional[str]
